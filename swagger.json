{
    "swagger": "2.0",
    "info": {
      "title": "User API",
      "description": "API documentation for the User API",
      "version": "1.0.0"
    },
    "host": "localhost:5000",
    "basePath": "/",
    "schemes": ["http"],
    "tags": [
      {
        "name": "User",
        "description": "Endpoints for managing users"
      }
    ],
    "paths": {
      "/api/user/register": {
        "post": {
          "tags": ["User"],
          "summary": "Create a new user",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "User object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateUser"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/user/all-users": {
        "get": {
          "tags": ["User"],
          "summary": "Get all users",
          "responses": {
            "200": {
              "description": "Success"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/api/user/{id}": {
        "get": {
          "tags": ["User"],
          "summary": "Get a single user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "put": {
          "tags": ["User"],
          "summary": "Update a user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateUser"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "delete": {
          "tags": ["User"],
          "summary": "Delete a user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "hireDate": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "hireDate": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": ["firstname", "lastname", "dateOfBirth", "department", "salary", "email", "hireDate", "jobTitle", "mobile"]
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "hireDate": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        }
      }
    }
  }
  